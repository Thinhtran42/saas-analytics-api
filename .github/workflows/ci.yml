name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_USER: admin
          POSTGRES_DB: saas_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: saas_db
          REDIS_HOST: localhost
          SECRET_KEY: test-secret-key
          ALGORITHM: HS256
        run: |
          pytest tests/ -v

      - name: Run linting
        run: |
          ruff check .
          black --check .

  docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t saas-analytics-api:${{ github.sha }} .

      - name: Test Docker image
        run: |
          docker run --rm saas-analytics-api:${{ github.sha }} echo "Docker build successful"
